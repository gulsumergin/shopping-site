const mainElement = document.querySelector('main');
let data = [];

async function fetchData(url) {
    try {
        const response = await fetch(url);
        const responseData = await response.json();
        return responseData;
    } catch (error) {
        console.error('Veri çekme hatası:', error);
    }
}

async function displayProducts() {
    data = await fetchData('https://fakestoreapi.com/products');

    const productContainer = document.createElement('div');
    productContainer.classList.add('container');
    productContainer.innerHTML = `
        <div class="row">
            <!-- Ürün kartları buraya gelecek -->
        </div>
    `;

    const productRow = productContainer.querySelector('.row');
    data.forEach(product => {
        const productCard = document.createElement('div');
        productCard.classList.add('col-md-4', 'mb-4');
        productCard.innerHTML = `
            <div class="card">
                <img src="${product.image}" class="card-img-top" alt="${product.title}">
                <div class="card-body">
                    <h5 class="card-title">${product.title}</h5>
                    <p class="card-text">${product.price}</p>
                    <button class="btn btn-primary btn-add-to-cart" data-id="${product.id}">Sepete Ekle</button>
                </div>
            </div>
        `;
        productRow.appendChild(productCard);
    });
    mainElement.appendChild(productContainer);
}

async function handleAddToCart(event) {
    const productId = event.target.getAttribute('data-id');
    const selectedProduct = data.find(product => product.id === parseInt(productId));

    if (selectedProduct) {
        cart.push(selectedProduct);
        console.log('Ürün sepete eklendi:', selectedProduct);
    } else {
        console.log('Ürün bulunamadı.');
    }
}

async function fetchAndLogData(url) {
    try {
        const data = await fetchData(url);
        console.log(data);
    } catch (error) {
        console.error('Veri çekme hatası:', error);
    }
}

const addToCartButtons = document.querySelectorAll('.btn-add-to-cart');
const cart = [];

addToCartButtons.forEach(button => {
    button.addEventListener('click', handleAddToCart);
});

(async () => {
    await fetchAndLogData('https://fakestoreapi.com/products/1');
    await fetchAndLogData('https://fakestoreapi.com/products/categories');

    // Adding a product
    await fetch('https://fakestoreapi.com/products', {
        method: "POST",
        body: JSON.stringify({
            title: 'test product',
            price: 13.5,
            description: 'lorem ipsum set',
            image: 'https://i.pravatar.cc',
            category: 'electronic'
        })
    }).then(response => response.json())
      .then(json => console.log(json));

    // Updating a product
    await fetch('https://fakestoreapi.com/products/7', {
        method: "PUT",
        body: JSON.stringify({
            title: 'test product',
            price: 13.5,
            description: 'lorem ipsum set',
            image: 'https://i.pravatar.cc',
            category: 'electronic'
        })
    }).then(response => response.json())
      .then(json => console.log(json));

    // Fetching limited products
    await fetchAndLogData('https://fakestoreapi.com/products?limit=5');

    // Fetching products sorted in descending order
    await fetchAndLogData('https://fakestoreapi.com/products?sort=desc');

    await fetchAndLogData('https://fakestoreapi.com/products/categories');
    await fetchAndLogData('https://fakestoreapi.com/products/category/jewelery');

    // Deleting a product
    await fetch('https://fakestoreapi.com/products/6', {
        method: "DELETE"
    }).then(response => response.json())
      .then(json => console.log(json));
})();
